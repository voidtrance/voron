[gcode_shell_command DO_ADAPTIVE_BED_MESH]
value_min_mesh: 0,0
value_max_mesh: 0,0
value_probe_count: 0,0
value_ref_index: 0
verbose: True
timeout:30
command: ~/moonraker-env/bin/python /home/pi/tools/adaptive_bed_mesh.py
success:
    BED_MESH_CALIBRATE MESH_MIN={min_mesh} MESH_MAX={max_mesh} PROBE_COUNT={probe_count} RELATIVE_REFERENCE_INDEX={ref_index}
failure:
    # Perform the stock bedmesh if adaptive bed mesh processing failed.
    BED_MESH_CALIBRATE

[gcode_macro ADAPTIVE_BED_MESH_CALIBRATE]
gcode:
    {% set gcode_file = printer.virtual_sdcard.file_path %}
    {% set bed_mesh = printer.configfile.config.bed_mesh %}
    {% set user_vars = printer["gcode_macro USER_VARIABLES"] %}

    # Sanitize arguments
    {% set mesh_min = bed_mesh.mesh_min.split(',')|map('trim')|join(',') %}
    {% set mesh_max = bed_mesh.mesh_max.split(',')|map('trim')|join(',') %}
    {% set probe_count = bed_mesh.probe_count.split(',')|map('trim')|join(',') %}

    RUN_SHELL_COMMAND CMD=DO_ADAPTIVE_BED_MESH PARAMS="--size={user_vars.hw.volume.x},{user_vars.hw.volume.y} --mesh_min={mesh_min} --mesh_max={mesh_max} --probe={probe_count} {gcode_file}"