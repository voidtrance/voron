################################################################
##  Configuration file include section
##

# Define a dictionary if custom user variables.
# This should be done first as anything defined
# later may reference it.
[include user_vars.cfg]

# Include LCD display menu
[include display/*.cfg]

# Include macros.
# Macros should be included last so all of the HW object
# are created prior to any macros.
[include macros/*.cfg]
[include macros/**/*.cfg]
################################################################

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
    CLEAR_PAUSE
    PRINT_END
    _BASE_CANCEL_PRINT

[gcode_macro __SET_PARK_POSITION_NAMES]
gcode:
    {% set user_vars = printer["gcode_macro USER_VARIABLES"] %}
    {% set names = [] %}
    {% for name in user_vars.macros.park_position.keys()|list %}
        {% set _ = names.append(name|replace("_", " ")|upper) %}
    {% endfor %}
    {% set a = user_vars.macros.update({"park_position_names" : names}) %}
    SET_GCODE_VARIABLE MACRO=USER_VARIABLES VARIABLE=macros VALUE="{user_vars.macros}"

[gcode_macro _PRINTER_INIT]
gcode:
    {% if 'gcode_macro USER_VARIABLES' in printer %}
        USER_VARIABLES

        # Jinja2 does not have a way to subscript a list inside an expression
        # statement ("{dict.keys()|list|[0]}"), so we have to dynamically create
        # a list of park position names.
        # Furthermore, this has to be done as a separate macro because the call
        # to USER_VARIABLES above does the actual initialization so running the
        # Jinja code here won't work.
        __SET_PARK_POSITION_NAMES
    {% else %}
        {action_respond_info("USER_VARIABLES macro not defined")}
    {% endif %}

    # Disable the filament sensor on start-up. The filament sensor
    # will be enabled during prints.
    FILAMENT_SENSOR_DISABLE

    # Turn the case lights off.
    CASELIGHTS STATE='OFF'
    SET_LCD
    SET_TOOLHEAD_STATE STATE=idle
    _INIT_SKIRT_BUTTONS
    _GET_NETWORK_STATE