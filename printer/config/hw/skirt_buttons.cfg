[mcu skirt_buttons]
serial: /dev/serial/by-id/usb-Klipper_stm32f072xb_17002E001753565639333820-if00
restart_method: command

[neopixel skirt_leds]
pin: skirt_buttons: PB0
chain_count: 14
color_order: GRB

[gcode_macro _skirt_vars]
variable_colors: {
    "idle" : {"red": 0, "green": 0, "blue" : 0, "white": 0},
    "busy" : {"red" : 0.9394, "green" : 0.9607, "blue" : 0.0196, "white": 0.0},
    "active" : {"red" : 0, "green": 1, "blue": 0, "white": 0},
    "off" : {"red" : 0, "green" : 0, "blue" : 0, "white": 0}
    }
variable_aliases: {
    "home" : "button3",
    "qgl" : "button2",
    }
variable_dim_factor: 0.2
variable_button1_idx:     "1,2"
variable_button1_state:   "idle"
variable_button2_idx:     "3,4"
variable_button2_state:   "idle"
variable_button3_idx:     "5,6"
variable_button3_state:   "idle"
variable_button4_idx:     "9,10"
variable_button4_state:   "idle"
variable_button5_idx:     "11,12"
variable_button5_state:   "idle"
variable_button6_idx:     "13,14"
variable_button6_state:   "idle"
variable_estop_idx:       "7,8"
gcode:
    {% set user_vars = printer["gcode_macro USER_VARIABLES"] %}
    {% set skirt_vars = printer["gcode_macro _skirt_vars"] %}
    {% set _ = skirt_vars.colors["idle"].update(
        {"red" : user_vars.hw.default_color[0] / 255,
         "green" : user_vars.hw.default_color[1] / 255,
         "blue" : user_vars.hw.default_color[2] / 255,
         "white" : 0}) %}
    SET_GCODE_VARIABLE MACRO=_skirt_vars VARIABLE=colors VALUE="{skirt_vars.colors}"

[gcode_macro _SET_SKIRT_LEDS]
gcode:
    {% set skirt_vars = printer["gcode_macro _skirt_vars"] %}
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set idx = (params.IDX|string).split(',') %}
    {% set transmit_last = params.TRANSMIT|default(1) %}

    {% set red = red * skirt_vars.dim_factor %}
    {% set green = green * skirt_vars.dim_factor %}
    {% set blue = blue * skirt_vars.dim_factor %}
    {% set white = white * skirt_vars.dim_factor %}

    {% for led_index in idx %}
        {% set transmit=transmit_last if loop.last else 0 %}
        SET_LED LED=skirt_leds RED={red} GREEN={green} BLUE={blue} WHITE={white} INDEX={led_index} TRANSMIT={transmit}
    {% endfor %}

[gcode_macro _SET_SKIRT_LEDS_BY_NAME]
gcode:
    {% set leds_name = params.BUTTON %}
    {% set color_name = params.COLOR|string|default("idle") %}
    {% set skirt_vars = printer["gcode_macro _skirt_vars"] %}
    {% set user_vars = printer["gcode_macro USER_VARIABLES"] %}
    {% set idx = skirt_vars[leds_name + "_idx"] %}
    {% set transmit = params.TRANSMIT|default(1) %}

    {% if color_name == "idle" or color_name not in skirt_vars.colors %}
        {% set color = {"red" : user_vars.hw.default_color[0] / 255,
                        "green" : user_vars.hw.default_color[1] / 255,
                        "blue" : user_vars.hw.default_color[2] / 255,
                        "white" : 0} %}
        {% if leds_name == "estop" %}
            {% set _ = color.update({"red" : 1, "green" : 0, "blue" : 0, "white" : 0}) %}
        {% endif %}
    {% else %}
        {% set color = skirt_vars.colors[color_name] %}
    {% endif %}

    _SET_SKIRT_LEDS RED={color.red} GREEN={color.green} BLUE={color.blue} WHITE={color.white} IDX="{idx}" TRANSMIT={transmit}

[gcode_macro _SKIRT_BUTTONS_SET_STATE]
gcode:
    {% set skirt_vars = printer["gcode_macro _skirt_vars"] %}
    {% set button = params.BUTTON|string %}
    {% set state = params.STATE|default("idle")|string %}
    {% set from = params.FROM|string|default("") %}

    {% if button in skirt_vars.aliases %}
        {% set button = skirt_vars.aliases[button] %}
    {% endif %}

    {% if state in skirt_vars.colors %}
        {% if from != "" %}
            {% if skirt_vars[button + "_state"] == from %}
                SET_GCODE_VARIABLE MACRO=_skirt_vars VARIABLE="{button}_state" VALUE="'{state}'"
            {% endif %}
        {% else %}
            SET_GCODE_VARIABLE MACRO=_skirt_vars VARIABLE="{button}_state" VALUE="'{state}'"
        {% endif %}
    {% endif %}

[gcode_macro _SKIRT_BUTTONS_RESET_STATES]
gcode:
    {% for i in range(1, 7) %}
        SET_GCODE_VARIABLE MACRO=_skirt_vars VARIABLE="button{i}_state" VALUE="'idle'"
    {% endfor %}

[gcode_macro _SKIRT_BUTTONS_ON]
gcode:
    {% set skirt_vars = printer["gcode_macro _skirt_vars"] %}
    {% for i in range(1, 7) %}
        {% set state = skirt_vars["button" + i|string + "_state"] %}
        _SET_SKIRT_LEDS_BY_NAME BUTTON="button{i}" COLOR={state}
    {% endfor %}
    _SET_SKIRT_LEDS_BY_NAME BUTTON="estop" COLOR="idle"

[gcode_macro _SKIRT_BUTTONS_OFF]
gcode:
    {% for i in range(1, 7) %}
        _SET_SKIRT_LEDS_BY_NAME BUTTON="button{i}" COLOR="off"
    {% endfor %}
    _SET_SKIRT_LEDS_BY_NAME BUTTON="estop" COLOR="off"

[gcode_macro _INIT_SKIRT_BUTTONS]
gcode:
    {% set user = printer["gcode_macro USER_VARIABLES"] %}
    {% set color_screen = params.COLOR|default(user.hw.default_color|join(","))|string %}
    {% set skirt_vars = printer["gcode_macro _skirt_vars"] %}

    # Split the params into individual colors
    {% set color_values = color_screen.split(",") %}

    {% set color = { "red" : color_values[0]|int / 255,
                     "green" : color_values[1]|int / 255,
                     "blue" : color_values[2]|int / 255} %}

    _skirt_vars

    {% for i in range(1, 7) %}
        _SKIRT_BUTTONS_SET_STATE BUTTON="button{i}" STATE="idle"
    {% endfor %}
    _SKIRT_BUTTONS_ON

[gcode_macro _SKIRT_BUTTONS_HANDLER]
gcode:
    {% set skirt_vars = printer["gcode_macro _skirt_vars"] %}
    {% set button = params.BUTTON|string %}
    
    {% if button in skirt_vars.aliases %}
        {% set button = skirt_vars.aliases[button] %}
    {% endif %}
    
    {% set action = "_SKIRT_BUTTONS_ACTION_" + button|upper %}

    {% if "gcode_macro " + action in printer %}
        _SKIRT_BUTTONS_SET_STATE BUTTON={button} STATE="busy"
        _SKIRT_BUTTONS_ON
        {action}
        _SKIRT_BUTTONS_SET_STATE BUTTON={button} FROM="busy" STATE="idle"
        _SKIRT_BUTTONS_ON
    {% endif %}

[gcode_button button1]
pin: ^!skirt_buttons: PB11
press_gcode:
    _SKIRT_BUTTONS_HANDLER BUTTON="button1"

[gcode_button button2]
pin: ^!skirt_buttons: PB10
press_gcode:
    _SKIRT_BUTTONS_HANDLER BUTTON="button2"

[gcode_button button3]
pin: ^!skirt_buttons: PB2
press_gcode:
    _SKIRT_BUTTONS_HANDLER BUTTON="button3"

[gcode_button estop]
pin: ^!skirt_buttons: PB1
press_gcode:
    M112

[gcode_button button4]
pin: ^!skirt_buttons: PB4
press_gcode:
    _SKIRT_BUTTONS_HANDLER BUTTON="button4"

[gcode_button button5]
pin: ^!skirt_buttons: PB3
press_gcode:
    _SKIRT_BUTTONS_HANDLER BUTTON="button5"

[gcode_button button6]
pin: ^!skirt_buttons: PA15
press_gcode:
    _SKIRT_BUTTONS_HANDLER BUTTON="button6"

#####################################
#             DISPLAY               #
#####################################

#[display]
##      mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: skirt_buttons: PB9
#a0_pin: skirt_buttons: PC15
#rst_pin: skirt_buttons: PB7
#encoder_pins: ^skirt_buttons: PA1, ^skirt: PA0
#click_pin: ^!skirt_buttons: PC14
#contrast: 63
#spi_software_miso_pin: skirt_buttons: PA6
#spi_software_mosi_pin: skirt_buttons: PA7
#spi_software_sclk_pin: skirt_buttons: PA5
#menu_timeout: 60

#[neopixel btt_mini12864]
##     To control Neopixel RGB in mini12864 display
#pin: skirt_buttons: PB8
#chain_count: 3
#initial_RED: 0.5
#initial_GREEN: 0
#initial_BLUE: 1.0
#color_order: RGB